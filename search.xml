<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>决策与优化</title>
      <link href="/2024/05/22/%E5%86%B3%E7%AD%96%E4%B8%8E%E4%BC%98%E5%8C%96/"/>
      <url>/2024/05/22/%E5%86%B3%E7%AD%96%E4%B8%8E%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="算法与数据结构"><a href="#算法与数据结构" class="headerlink" title="算法与数据结构"></a>算法与数据结构</h1><h2 id="1-网络图的表示"><a href="#1-网络图的表示" class="headerlink" title="1. 网络图的表示"></a>1. 网络图的表示</h2><p>网络图由$G = (N, A)$表示，$N、A$分别代表图的节点集合与边集合。每一条边$(i,j)$有长度$c_{ij}$，可代表路程、时间、成本等。令$n$代表节点数，$m$代表边数</p><ul><li><strong>Node-Arc Incidence Matrix</strong><br>由一个二维数组存储一个无权有向图的信息。<ul><li>第一行存储所有的边，例如$(1,2)$，代表$1,2$节点之间有一条边</li><li>第一列存储所有的节点</li><li>矩阵中的值有$-1,0,1$三个取值，$-1$代表该节点是这条边的终点，$0$代表该节点不是这条边的起点或终点，$1$代表该节点是这条边的起点</li><li>存储空间为$O(n \times m)$</li></ul></li><li><strong>Node-Node Adjacent Matrix</strong><br>由一个二维数组存储一个无权有向图的信息。<ul><li>第一行与第一列都存放所有节点，但含义不同。第一列代表起点节点，第一行代表终点节点</li><li>矩阵中的值有$0,1$两个取值，$1$代表两节点之间存在一条边，且起点、终点分别为矩阵中该元素对应的行、列号</li><li>存储空间为$O(n^2)$</li></ul></li><li><strong>Adjacency Lists</strong><br>由一个多维链表存储一个无权有向图的信息。<ul><li>共有$n$个链表，代表$n$个节点。每个链表后接的结点为以该节点为起点的所有边对应的终点（注意区分网络图的<strong>节点</strong>与链表的<strong>结点</strong>）</li><li>存储空间为$O(n+m)$</li><li>查找某两个节点间是否存在边的时间复杂度为$O(n)$</li></ul></li><li><strong>Star representation</strong></li><li></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>弄了一上午</title>
      <link href="/2024/05/22/hello-world/"/>
      <url>/2024/05/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>花了一上午，终于弄好了</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
